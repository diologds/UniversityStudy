<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <context:component-scan base-package="lv.javaguru.java2.ishop" />

    <tx:annotation-driven  transaction-manager="transactionManager"/>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/ishop" />
        <property name="username" value="root" />
        <property name="password" value="password" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="lv.javaguru.java2.ishop.domain"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect"> org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>



    <!-- a PlatformTransactionManager is still required -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory">
    </bean>


    <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txModelAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <tx:method name="getModel"
                       isolation="REPEATABLE_READ"
                       propagation="REQUIRES_NEW"
                       read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <tx:advice id="txTaskAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="performTask"
                       isolation="REPEATABLE_READ"
                       propagation="REQUIRES_NEW"
                       read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
        of an operation defined by: -->
    <aop:config>
        <aop:pointcut id="pageControllers" expression="execution(* lv.javaguru.java2.ishop.servlet.mvc.*ControllerImpl.*(..))"/>
        <aop:advisor advice-ref="txModelAdvice" pointcut-ref="pageControllers"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="taskControllers" expression="execution(* lv.javaguru.java2.ishop.servlet.mvc.*ControllerImpl.*(..))"/>
        <aop:advisor advice-ref="txTaskAdvice" pointcut-ref="taskControllers"/>
    </aop:config>


</beans>
